{"ast":null,"code":"import _objectSpread from\"F:\\\\001\\\\Fest_App\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"F:\\\\001\\\\Fest_App\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"F:\\\\001\\\\Fest_App\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"F:\\\\001\\\\Fest_App\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{TextField,Button,Typography,Paper}from'@material-ui/core';import{useDispatch,useSelector}from'react-redux';import FileBase from'react-file-base64';import useStyles from'./styles';import{createPost,updatePost}from'../../actions/posts';var Form=function Form(_ref){var currentId=_ref.currentId,setCurrentId=_ref.setCurrentId;var _useState=useState({date:'',title:'',description:'',country:'',image:''}),_useState2=_slicedToArray(_useState,2),postData=_useState2[0],setPostData=_useState2[1];var post=useSelector(function(state){return currentId?state.posts.find(function(message){return message._id===currentId;}):null;});var dispatch=useDispatch();var classes=useStyles();useEffect(function(){if(post)setPostData(post);},[post]);var clear=function clear(){setCurrentId(0);setPostData({date:'',title:'',description:'',country:'',image:''});};var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(currentId===0){dispatch(createPost(postData));clear();}else{dispatch(updatePost(currentId,postData));clear();}case 2:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(Paper,{className:classes.paper},/*#__PURE__*/React.createElement(\"form\",{autoComplete:\"off\",noValidate:true,className:\"\".concat(classes.root,\" \").concat(classes.form),onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Typography,{variant:\"h6\"},currentId?\"Editing \\\"\".concat(post.title,\"\\\"\"):'Creating a Memory'),/*#__PURE__*/React.createElement(TextField,{name:\"date\",variant:\"outlined\",label:\"Date\",fullWidth:true,value:postData.date,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{date:e.target.value}));}}),/*#__PURE__*/React.createElement(TextField,{name:\"title\",variant:\"outlined\",label:\"Title\",fullWidth:true,value:postData.title,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{title:e.target.value}));}}),/*#__PURE__*/React.createElement(TextField,{name:\"description\",variant:\"outlined\",label:\"Description\",fullWidth:true,multiline:true,rows:4,value:postData.description,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{description:e.target.value}));}}),/*#__PURE__*/React.createElement(TextField,{name:\"country\",variant:\"outlined\",label:\"country (coma separated)\",fullWidth:true,value:postData.country,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{country:e.target.value.split(',')}));}}),/*#__PURE__*/React.createElement(\"div\",{className:classes.fileInput},/*#__PURE__*/React.createElement(FileBase,{type:\"file\",multiple:false,onDone:function onDone(_ref3){var base64=_ref3.base64;return setPostData(_objectSpread(_objectSpread({},postData),{},{selectedFile:base64}));}})),/*#__PURE__*/React.createElement(Button,{className:classes.buttonSubmit,variant:\"contained\",color:\"primary\",size:\"large\",type:\"submit\",fullWidth:true},\"Submit\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"secondary\",size:\"small\",onClick:clear,fullWidth:true},\"Clear\")));};export default Form;","map":{"version":3,"sources":["F:/001/Fest_App/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","Form","currentId","setCurrentId","date","title","description","country","image","postData","setPostData","post","state","posts","find","message","_id","dispatch","classes","clear","handleSubmit","e","preventDefault","paper","root","form","target","value","split","fileInput","base64","selectedFile","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ date: '', title: '', description: '', country: '', image: '' });\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ date: '', title: '', description: '', country: '', image: '' });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\n        <TextField name=\"date\" variant=\"outlined\" label=\"Date\" fullWidth value={postData.date} onChange={(e) => setPostData({ ...postData, date: e.target.value })} />\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"description\" variant=\"outlined\" label=\"Description\" fullWidth multiline rows={4} value={postData.description} onChange={(e) => setPostData({ ...postData, description: e.target.value })} />\n        <TextField name=\"country\" variant=\"outlined\" label=\"country (coma separated)\" fullWidth value={postData.country} onChange={(e) => setPostData({ ...postData, country: e.target.value.split(',') })} />\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}